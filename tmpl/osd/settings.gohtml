<!DOCTYPE html>
<html>
<head>
	<title>OSD Settings</title>
<style type="text/css">
:root {
--background-color: {{.Settings.BackgroundColor}};
--font-family: {{.Settings.FontFamily}};
--font-size: {{.Settings.FontSize}}px;
--font-weight: {{.Settings.FontWeight}};
--line-height: {{.Settings.LineHeight}}%;
--volt-color: {{.Settings.VoltColor}};
--amp-color: {{.Settings.AmpColor}};
--border-radius: 10px;
--box-shadow: 10px 10px 20px #00000080;
--padding: 5px;
}

#psu {
	width: min-content;
	padding: var(--padding);
	font-family: var(--font-family); 
	line-height: var(--line-height);
	font-size: var(--font-size);
	font-weight: var(--font-weight);
	background-color: var(--background-color);
	transition: opacity .5s;
	border-radius: var(--border-radius);
	box-shadow: var(--box-shadow);
} 
.volts { color: var(--volt-color); text-align: right;}
.amps { color: var(--amp-color); text-align: right; }
.volts:after { content: "V"; }
.amps:after { content: "A"; }
.error { opacity: 0; }
html,
body {
	font-family: sans-serif;
	background-color: #eee;
	width: 100%;
	height: 100%;
	overflow: hidden;
	margin: 0;
	padding: 0;
}

input.color { font-family: monospace; width: 6em }

form {
	display: grid;
	grid-template-columns: min-content min-content;
	grid-gap: 5px;
}

form>div {
	white-space: nowrap;
}

form>label {
	white-space: nowrap;
	text-align: right;
	align-self: end;
}

form>button[type="submit"] {
	grid-column-end: span 2;
}

#font {
	font-family: var(--font-family);
}
</style>
<script>

document.addEventListener("DOMContentLoaded", function(e) {
	let source = new EventSource({{.EventSource}});
	let psu = document.getElementById("psu")
	let volts = psu.querySelector(".volts")
	let amps = psu.querySelector(".amps")

	source.addEventListener("settings", (e) => {
		let d = new URLSearchParams(e.data)
		let s = document.documentElement.style
		s.setProperty("--background-color", d.get("backgroundColor"))
		s.setProperty("--padding", d.get("padding"))
		s.setProperty("--font-family", d.get("fontFamily"))
		s.setProperty("--font-size", d.get("fontSize"))
		s.setProperty("--font-weight", d.get("fontWeight"))
		s.setProperty("--line-height", d.get("lineHeight"))
		s.setProperty("--volt-color", d.get("voltColor"))
		s.setProperty("--amp-color", d.get("ampColor"))
	})
	source.addEventListener("error", (e) => psu.classList.add("error"))
	source.addEventListener("open", (e) => psu.classList.remove("error"))
	source.addEventListener("volts", (e) => volts.innerText = e.data);
	source.addEventListener("amps", (e) => amps.innerText = e.data);
});
</script>
</head>
<body>
	<div id="psu" class="error">
		<div class="volts" title="Volts"></div>
		<div class="amps" title="Amps"></div>
	</div>
	<form method="post">
		<label for="bgColor">Background</label>
		<div>
			<input type="text" class="color" id="bgColorOutput" oninput="bgColor.value=this.value" value="{{.Settings.BackgroundColor.RGB}}">
			<input type="color" id="bgColor" name="backgroundColor" value="{{.Settings.BackgroundColor.RGB}}" oninput="bgColorOutput.value=bgColor.value;document.documentElement.style.setProperty('--background-color', this.value)">			
		</div>
		<label for="bgAlpha">Background Alpha</label>
		<div>
			<input type="range" min="0" max="255" id="bgAlpha" name="backgroundAlpha" value="{{.Settings.BackgroundColor.A}}" oninput="bgAlphaOutput.value=parseFloat(bgAlpha.value)" >
			<output id="bgAlphaOutput" for="bgAlpha">{{.Settings.BackgroundColor.A}}</output>		
		</div>

		<label for="padding">Padding</label>
		<div>
			<input type="range" min="0" max="100" id="padding" name="padding" value="{{.Settings.Padding}}" oninput="paddingOutput.value=parseInt(padding.value)+'px';document.documentElement.style.setProperty('--padding', this.value+'px')">
			<output name="paddingOutput" for="padding">{{.Settings.Padding}}px</output>
		</div>

		<label for="voltColor">Volts</label>
		<div>
			<input type="text" class="color" id="voltColorOutput" oninput="voltColor.value=this.value" value="{{.Settings.VoltColor}}">
			<input type="color" id="voltColor" name="voltColor" value="{{.Settings.VoltColor}}" oninput="voltColorOutput.value=voltColor.value;document.documentElement.style.setProperty('--volt-color', this.value)">			
		</div>

		<label for="ampColor">Amps</label>
		<div>
			<input type="text" class="color" id="ampColorOutput" oninput="ampColor.value=this.value" value="{{.Settings.AmpColor}}">
			<input type="color" id="ampColor" name="ampColor" value="{{.Settings.AmpColor}}" oninput="ampColorOutput.value=ampColor.value;document.documentElement.style.setProperty('--amp-color', this.value)">
		</div>

		<label for="font">Font</label>
		<select id="font" name="font" oninput="font.style.fontFamily=font.options[font.selectedIndex].style.fontFamily;document.documentElement.style.setProperty('--font-family', this.value)">
			{{- range .Fonts -}}
			<option style="font-family: '{{.}}'"{{if eq . $.Settings.FontFamily}} selected{{end}}>{{.}}</option>
			{{- end -}}
		</select>

		<label for="fontSize">Font Size</label>
		<div>
			<input type="range" min="8" max="128" id="fontSize" name="fontSize" value="{{.Settings.FontSize}}" oninput="fontSizeOutput.value=parseInt(fontSize.value);document.documentElement.style.setProperty('--font-size', this.value+'px')">
			<output name="fontSizeOutput" for="fontSize">{{.Settings.FontSize}}</output>
		</div>

		<label for="fntWgt">Font Weight</label>
		<div>
			<input type="range" min="100" max="900" id="fntWgt" name="fontWeight" value="{{.Settings.FontWeight}}" oninput="fntWgtOutput.value=parseInt(fntWgt.value);document.documentElement.style.setProperty('--font-weight', this.value)" step="100">
			<output name="fntWgtOutput" for="fntWgt">{{.Settings.FontWeight}}</output>
		</div>

		<label for="lineHeight">Line Height</label>
		<div>
			<input type="range" min="100" max="200" id="lineHeight" name="lineHeight" value="{{.Settings.LineHeight}}"
				oninput="lineHeightOutput.value=parseInt(lineHeight.value) + '%'; document.documentElement.style.setProperty('--line-height', this.value + '%')">
			<output name="lineHeightOutput" for="lineHeight">{{.Settings.LineHeight}}%</output>
		</div>

		<button type="submit">Apply</button>
	</form>
</body>
</html>
